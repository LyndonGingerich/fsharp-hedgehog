[{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog.html","title":"Hedgehog","content":"Gen \nGenBuilder \nGenLinqSupport \nGenOperators \nJournal \nNumeric \nProperty \nPropertyBuilder \nPropertyLinqSupport \nRandom \nRandomBuilder \nRange \nRangeLinqSupport \nReport \nResult \nSeed \nSeq \nShrink \nTree \nFailedException \nFailureReport \nFromBigInt \nGaveUpException \nGen\u003C\u0027a\u003E \nHedgehogException \nJournal \nMaxValue \nMinValue \nProperty\u003C\u0027a\u003E \nRandom\u003C\u0027a\u003E \nRange\u003C\u0027a\u003E \nReport \nResult\u003C\u0027a\u003E \nSeed \nSize \nStatus \nToBigInt \nTree\u003C\u0027a\u003E \ndiscards \nshrinks \ntests"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html","title":"Gen","content":"Gen \n \nGen.Builder \nBuilder \nGen.ofRandom \nofRandom \nGen.toRandom \ntoRandom \nGen.delay \ndelay \nGen.tryFinally \ntryFinally \nGen.tryWith \ntryWith \nGen.create \ncreate \nGen.constant \nconstant \nGen.bind \nbind \nGen.apply \napply \nGen.mapRandom \nmapRandom \nGen.mapTree \nmapTree \nGen.map \nmap \nGen.map2 \nmap2 \nGen.map3 \nmap3 \nGen.map4 \nmap4 \nGen.zip \nzip \nGen.zip3 \nzip3 \nGen.zip4 \nzip4 \nGen.tuple \ntuple \nGen.tuple3 \ntuple3 \nGen.tuple4 \ntuple4 \nGen.noShrink \nnoShrink \nGen.shrinkLazy \nshrinkLazy \nGen.shrink \nshrink \nGen.sized \nsized \nGen.resize \nresize \nGen.scale \nscale \nGen.integral \nintegral \nGen.item \nitem \nGen.frequency \nfrequency \nGen.choice \nchoice \nGen.choiceRec \nchoiceRec \nGen.filter \nfilter \nGen.tryFilter \ntryFilter \nGen.some \nsome \nGen.option \noption \nGen.list \nlist \nGen.array \narray \nGen.seq \nseq \nGen.char \nchar \nGen.unicodeAll \nunicodeAll \nGen.digit \ndigit \nGen.lower \nlower \nGen.upper \nupper \nGen.ascii \nascii \nGen.latin1 \nlatin1 \nGen.unicode \nunicode \nGen.alpha \nalpha \nGen.alphaNum \nalphaNum \nGen.string \nstring \nGen.bool \nbool \nGen.byte \nbyte \nGen.sbyte \nsbyte \nGen.int16 \nint16 \nGen.uint16 \nuint16 \nGen.int \nint \nGen.uint32 \nuint32 \nGen.int64 \nint64 \nGen.uint64 \nuint64 \nGen.double \ndouble \nGen.float \nfloat \nGen.single \nsingle \nGen.decimal \ndecimal \nGen.guid \nguid \nGen.dateTime \ndateTime \nGen.sampleTree \nsampleTree \nGen.sample \nsample \nGen.generateTree \ngenerateTree \nGen.printSample \nprintSample"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#ofRandom","title":"Gen.ofRandom","content":"Gen.ofRandom \nofRandom \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#toRandom","title":"Gen.toRandom","content":"Gen.toRandom \ntoRandom \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#delay","title":"Gen.delay","content":"Gen.delay \ndelay \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#tryFinally","title":"Gen.tryFinally","content":"Gen.tryFinally \ntryFinally \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#tryWith","title":"Gen.tryWith","content":"Gen.tryWith \ntryWith \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#create","title":"Gen.create","content":"Gen.create \ncreate \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#constant","title":"Gen.constant","content":"Gen.constant \nconstant \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#bind","title":"Gen.bind","content":"Gen.bind \nbind \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#apply","title":"Gen.apply","content":"Gen.apply \napply \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#mapRandom","title":"Gen.mapRandom","content":"Gen.mapRandom \nmapRandom \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#mapTree","title":"Gen.mapTree","content":"Gen.mapTree \nmapTree \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#map","title":"Gen.map","content":"Gen.map \nmap \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#map2","title":"Gen.map2","content":"Gen.map2 \nmap2 \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#map3","title":"Gen.map3","content":"Gen.map3 \nmap3 \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#map4","title":"Gen.map4","content":"Gen.map4 \nmap4 \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#zip","title":"Gen.zip","content":"Gen.zip \nzip \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#zip3","title":"Gen.zip3","content":"Gen.zip3 \nzip3 \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#zip4","title":"Gen.zip4","content":"Gen.zip4 \nzip4 \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#tuple","title":"Gen.tuple","content":"Gen.tuple \ntuple \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#tuple3","title":"Gen.tuple3","content":"Gen.tuple3 \ntuple3 \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#tuple4","title":"Gen.tuple4","content":"Gen.tuple4 \ntuple4 \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#noShrink","title":"Gen.noShrink","content":"Gen.noShrink \nnoShrink \n\n Prevent a \u0027Gen\u0027 from shrinking.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#shrinkLazy","title":"Gen.shrinkLazy","content":"Gen.shrinkLazy \nshrinkLazy \n\n Apply an additional shrinker to all generated trees.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#shrink","title":"Gen.shrink","content":"Gen.shrink \nshrink \n\n Apply an additional shrinker to all generated trees.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#sized","title":"Gen.sized","content":"Gen.sized \nsized \n\n Used to construct generators that depend on the size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#resize","title":"Gen.resize","content":"Gen.resize \nresize \n\n Overrides the size parameter. Returns a generator which uses the\n given size instead of the runtime-size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#scale","title":"Gen.scale","content":"Gen.scale \nscale \n\n Adjust the size parameter, by transforming it with the given\n function.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#integral","title":"Gen.integral","content":"Gen.integral \nintegral \n\n Generates a random number in the given inclusive range.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#item","title":"Gen.item","content":"Gen.item \nitem \n\n Randomly selects one of the values in the list.\n \u003Ci\u003EThe input list must be non-empty.\u003C/i\u003E\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#frequency","title":"Gen.frequency","content":"Gen.frequency \nfrequency \n\n Uses a weighted distribution to randomly select one of the gens in the list.\n This generator shrinks towards the first generator in the list.\n \u003Ci\u003EThe input list must be non-empty.\u003C/i\u003E\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#choice","title":"Gen.choice","content":"Gen.choice \nchoice \n\n Randomly selects one of the gens in the list.\n \u003Ci\u003EThe input list must be non-empty.\u003C/i\u003E\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#choiceRec","title":"Gen.choiceRec","content":"Gen.choiceRec \nchoiceRec \n\n Randomly selects from one of the gens in either the non-recursive or the\n recursive list. When a selection is made from the recursive list, the size\n is halved. When the size gets to one or less, selections are no longer made\n from the recursive list.\n \u003Ci\u003EThe first argument (i.e. the non-recursive input list) must be non-empty.\u003C/i\u003E\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#filter","title":"Gen.filter","content":"Gen.filter \nfilter \n\n Generates a value that satisfies a predicate.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#tryFilter","title":"Gen.tryFilter","content":"Gen.tryFilter \ntryFilter \n\n Tries to generate a value that satisfies a predicate.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#some","title":"Gen.some","content":"Gen.some \nsome \n\n Runs an option generator until it produces a \u0027Some\u0027.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#option","title":"Gen.option","content":"Gen.option \noption \n\n Generates a \u0027None\u0027 part of the time.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#list","title":"Gen.list","content":"Gen.list \nlist \n\n Generates a list using a \u0027Range\u0027 to determine the length.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#array","title":"Gen.array","content":"Gen.array \narray \n\n Generates an array using a \u0027Range\u0027 to determine the length.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#seq","title":"Gen.seq","content":"Gen.seq \nseq \n\n Generates a sequence using a \u0027Range\u0027 to determine the length.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#char","title":"Gen.char","content":"Gen.char \nchar \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#unicodeAll","title":"Gen.unicodeAll","content":"Gen.unicodeAll \nunicodeAll \n\n Generates a Unicode character, including invalid standalone surrogates:\n \u0027\\000\u0027..\u0027\\65535\u0027\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#digit","title":"Gen.digit","content":"Gen.digit \ndigit \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#lower","title":"Gen.lower","content":"Gen.lower \nlower \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#upper","title":"Gen.upper","content":"Gen.upper \nupper \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#ascii","title":"Gen.ascii","content":"Gen.ascii \nascii \n\n Generates an ASCII character: \u0027\\000\u0027..\u0027\\127\u0027\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#latin1","title":"Gen.latin1","content":"Gen.latin1 \nlatin1 \n\n Generates a Latin-1 character: \u0027\\000\u0027..\u0027\\255\u0027\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#unicode","title":"Gen.unicode","content":"Gen.unicode \nunicode \n\n Generates a Unicode character, excluding noncharacters\n (\u0027\\65534\u0027, \u0027\\65535\u0027) and invalid standalone surrogates\n (\u0027\\000\u0027..\u0027\\65535\u0027 excluding \u0027\\55296\u0027..\u0027\\57343\u0027).\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#alpha","title":"Gen.alpha","content":"Gen.alpha \nalpha \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#alphaNum","title":"Gen.alphaNum","content":"Gen.alphaNum \nalphaNum \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#string","title":"Gen.string","content":"Gen.string \nstring \n\n Generates a random string using \u0027Range\u0027 to determine the length and the\n specified character generator.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#bool","title":"Gen.bool","content":"Gen.bool \nbool \n\n Generates a random boolean.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#byte","title":"Gen.byte","content":"Gen.byte \nbyte \n\n Generates a random byte.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#sbyte","title":"Gen.sbyte","content":"Gen.sbyte \nsbyte \n\n Generates a random signed byte.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#int16","title":"Gen.int16","content":"Gen.int16 \nint16 \n\n Generates a random signed 16-bit integer.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#uint16","title":"Gen.uint16","content":"Gen.uint16 \nuint16 \n\n Generates a random unsigned 16-bit integer.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#int","title":"Gen.int","content":"Gen.int \nint \n\n Generates a random signed 32-bit integer.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#uint32","title":"Gen.uint32","content":"Gen.uint32 \nuint32 \n\n Generates a random unsigned 32-bit integer.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#int64","title":"Gen.int64","content":"Gen.int64 \nint64 \n\n Generates a random signed 64-bit integer.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#uint64","title":"Gen.uint64","content":"Gen.uint64 \nuint64 \n\n Generates a random unsigned 64-bit integer.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#double","title":"Gen.double","content":"Gen.double \ndouble \n\n Generates a random 64-bit floating point number.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#float","title":"Gen.float","content":"Gen.float \nfloat \n\n Generates a random 64-bit floating point number.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#single","title":"Gen.single","content":"Gen.single \nsingle \n\n Generates a random 32-bit floating point number.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#decimal","title":"Gen.decimal","content":"Gen.decimal \ndecimal \n\n Generates a random decimal floating-point number.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#guid","title":"Gen.guid","content":"Gen.guid \nguid \n\n Generates a random globally unique identifier.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#dateTime","title":"Gen.dateTime","content":"Gen.dateTime \ndateTime \n\n Generates a random instant in time expressed as a date and time of day.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#sampleTree","title":"Gen.sampleTree","content":"Gen.sampleTree \nsampleTree \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#sample","title":"Gen.sample","content":"Gen.sample \nsample \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#generateTree","title":"Gen.generateTree","content":"Gen.generateTree \ngenerateTree \n\n Run a generator. The size passed to the generator is always 30;\n if you want another size then you should explicitly use \u0027resize\u0027.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen.html#printSample","title":"Gen.printSample","content":"Gen.printSample \nprintSample \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen-builder.html","title":"Builder","content":"Builder \n \nBuilder.Bind \nBind \nBuilder.Combine \nCombine \nBuilder.Delay \nDelay \nBuilder.For \nFor \nBuilder.Return \nReturn \nBuilder.ReturnFrom \nReturnFrom \nBuilder.Zero \nZero"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen-builder.html#Bind","title":"Builder.Bind","content":"Builder.Bind \nBind \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen-builder.html#Combine","title":"Builder.Combine","content":"Builder.Combine \nCombine \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen-builder.html#Delay","title":"Builder.Delay","content":"Builder.Delay \nDelay \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen-builder.html#For","title":"Builder.For","content":"Builder.For \nFor \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen-builder.html#Return","title":"Builder.Return","content":"Builder.Return \nReturn \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen-builder.html#ReturnFrom","title":"Builder.ReturnFrom","content":"Builder.ReturnFrom \nReturnFrom \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen-builder.html#Zero","title":"Builder.Zero","content":"Builder.Zero \nZero \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-genbuilder.html","title":"GenBuilder","content":"GenBuilder \n \nGenBuilder.gen \ngen"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-genbuilder.html#gen","title":"GenBuilder.gen","content":"GenBuilder.gen \ngen \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-genlinqsupport.html","title":"GenLinqSupport","content":"GenLinqSupport \n \nGenLinqSupport.where \nwhere \nGenLinqSupport.select \nselect \nGenLinqSupport.bind2 \nbind2"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-genlinqsupport.html#where","title":"GenLinqSupport.where","content":"GenLinqSupport.where \nwhere \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-genlinqsupport.html#select","title":"GenLinqSupport.select","content":"GenLinqSupport.select \nselect \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-genlinqsupport.html#bind2","title":"GenLinqSupport.bind2","content":"GenLinqSupport.bind2 \nbind2 \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-genoperators.html","title":"GenOperators","content":"GenOperators \n \nGenOperators.( \u003C!\u003E ) \n( \u003C!\u003E ) \nGenOperators.( \u003C*\u003E ) \n( \u003C*\u003E )"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-genoperators.html#( \u003C!\u003E )","title":"GenOperators.( \u003C!\u003E )","content":"GenOperators.( \u003C!\u003E ) \n( \u003C!\u003E ) \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-genoperators.html#( \u003C*\u003E )","title":"GenOperators.( \u003C*\u003E )","content":"GenOperators.( \u003C*\u003E ) \n( \u003C*\u003E ) \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-journalmodule.html","title":"Journal","content":"Journal \n \nJournal.ofList \nofList \nJournal.toList \ntoList \nJournal.empty \nempty \nJournal.singleton \nsingleton \nJournal.delayedSingleton \ndelayedSingleton \nJournal.append \nappend"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-journalmodule.html#ofList","title":"Journal.ofList","content":"Journal.ofList \nofList \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-journalmodule.html#toList","title":"Journal.toList","content":"Journal.toList \ntoList \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-journalmodule.html#empty","title":"Journal.empty","content":"Journal.empty \nempty \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-journalmodule.html#singleton","title":"Journal.singleton","content":"Journal.singleton \nsingleton \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-journalmodule.html#delayedSingleton","title":"Journal.delayedSingleton","content":"Journal.delayedSingleton \ndelayedSingleton \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-journalmodule.html#append","title":"Journal.append","content":"Journal.append \nappend \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-numeric.html","title":"Numeric","content":"Numeric \n \nNumeric.minValue \nminValue \nNumeric.maxValue \nmaxValue \nNumeric.fromBigInt \nfromBigInt \nNumeric.toBigInt \ntoBigInt"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-numeric.html#minValue","title":"Numeric.minValue","content":"Numeric.minValue \nminValue \n\n Returns the smallest possible value.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-numeric.html#maxValue","title":"Numeric.maxValue","content":"Numeric.maxValue \nmaxValue \n\n Returns the largest possible value.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-numeric.html#fromBigInt","title":"Numeric.fromBigInt","content":"Numeric.fromBigInt \nfromBigInt \n\n Converts from a BigInt to the inferred destination type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-numeric.html#toBigInt","title":"Numeric.toBigInt","content":"Numeric.toBigInt \ntoBigInt \n\n Converts to a BigInt.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html","title":"Property","content":"Property \n \nProperty.ofGen \nofGen \nProperty.toGen \ntoGen \nProperty.tryFinally \ntryFinally \nProperty.tryWith \ntryWith \nProperty.delay \ndelay \nProperty.using \nusing \nProperty.filter \nfilter \nProperty.ofResult \nofResult \nProperty.failure \nfailure \nProperty.discard \ndiscard \nProperty.success \nsuccess \nProperty.ofBool \nofBool \nProperty.counterexample \ncounterexample \nProperty.map \nmap \nProperty.bind \nbind \nProperty.forAll \nforAll \nProperty.forAll\u0027 \nforAll\u0027 \nProperty.report\u0027 \nreport\u0027 \nProperty.report \nreport \nProperty.check\u0027 \ncheck\u0027 \nProperty.check \ncheck \nProperty.checkBool \ncheckBool \nProperty.checkBool\u0027 \ncheckBool\u0027 \nProperty.recheck\u0027 \nrecheck\u0027 \nProperty.recheck \nrecheck \nProperty.recheckBool\u0027 \nrecheckBool\u0027 \nProperty.recheckBool \nrecheckBool \nProperty.print\u0027 \nprint\u0027 \nProperty.print \nprint"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#ofGen","title":"Property.ofGen","content":"Property.ofGen \nofGen \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#toGen","title":"Property.toGen","content":"Property.toGen \ntoGen \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#tryFinally","title":"Property.tryFinally","content":"Property.tryFinally \ntryFinally \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#tryWith","title":"Property.tryWith","content":"Property.tryWith \ntryWith \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#delay","title":"Property.delay","content":"Property.delay \ndelay \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#using","title":"Property.using","content":"Property.using \nusing \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#filter","title":"Property.filter","content":"Property.filter \nfilter \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#ofResult","title":"Property.ofResult","content":"Property.ofResult \nofResult \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#failure","title":"Property.failure","content":"Property.failure \nfailure \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#discard","title":"Property.discard","content":"Property.discard \ndiscard \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#success","title":"Property.success","content":"Property.success \nsuccess \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#ofBool","title":"Property.ofBool","content":"Property.ofBool \nofBool \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#counterexample","title":"Property.counterexample","content":"Property.counterexample \ncounterexample \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#map","title":"Property.map","content":"Property.map \nmap \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#bind","title":"Property.bind","content":"Property.bind \nbind \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#forAll","title":"Property.forAll","content":"Property.forAll \nforAll \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#forAll\u0027","title":"Property.forAll\u0027","content":"Property.forAll\u0027 \nforAll\u0027 \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#report\u0027","title":"Property.report\u0027","content":"Property.report\u0027 \nreport\u0027 \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#report","title":"Property.report","content":"Property.report \nreport \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#check\u0027","title":"Property.check\u0027","content":"Property.check\u0027 \ncheck\u0027 \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#check","title":"Property.check","content":"Property.check \ncheck \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#checkBool","title":"Property.checkBool","content":"Property.checkBool \ncheckBool \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#checkBool\u0027","title":"Property.checkBool\u0027","content":"Property.checkBool\u0027 \ncheckBool\u0027 \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#recheck\u0027","title":"Property.recheck\u0027","content":"Property.recheck\u0027 \nrecheck\u0027 \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#recheck","title":"Property.recheck","content":"Property.recheck \nrecheck \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#recheckBool\u0027","title":"Property.recheckBool\u0027","content":"Property.recheckBool\u0027 \nrecheckBool\u0027 \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#recheckBool","title":"Property.recheckBool","content":"Property.recheckBool \nrecheckBool \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#print\u0027","title":"Property.print\u0027","content":"Property.print\u0027 \nprint\u0027 \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property.html#print","title":"Property.print","content":"Property.print \nprint \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertybuilder.html","title":"PropertyBuilder","content":"PropertyBuilder \n \nPropertyBuilder.Builder \nBuilder \nPropertyBuilder.property \nproperty"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertybuilder.html#property","title":"PropertyBuilder.property","content":"PropertyBuilder.property \nproperty \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html","title":"Builder","content":"Builder \n \nBuilder.Bind \nBind \nBuilder.Combine \nCombine \nBuilder.Counterexample \nCounterexample \nBuilder.Delay \nDelay \nBuilder.For \nFor \nBuilder.For \nFor \nBuilder.Return \nReturn \nBuilder.ReturnFrom \nReturnFrom \nBuilder.TryFinally \nTryFinally \nBuilder.TryWith \nTryWith \nBuilder.Using \nUsing \nBuilder.Where \nWhere \nBuilder.While \nWhile \nBuilder.Yield \nYield \nBuilder.Zero \nZero"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#Bind","title":"Builder.Bind","content":"Builder.Bind \nBind \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#Combine","title":"Builder.Combine","content":"Builder.Combine \nCombine \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#Counterexample","title":"Builder.Counterexample","content":"Builder.Counterexample \nCounterexample \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#Delay","title":"Builder.Delay","content":"Builder.Delay \nDelay \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#For","title":"Builder.For","content":"Builder.For \nFor \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#For","title":"Builder.For","content":"Builder.For \nFor \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#Return","title":"Builder.Return","content":"Builder.Return \nReturn \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#ReturnFrom","title":"Builder.ReturnFrom","content":"Builder.ReturnFrom \nReturnFrom \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#TryFinally","title":"Builder.TryFinally","content":"Builder.TryFinally \nTryFinally \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#TryWith","title":"Builder.TryWith","content":"Builder.TryWith \nTryWith \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#Using","title":"Builder.Using","content":"Builder.Using \nUsing \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#Where","title":"Builder.Where","content":"Builder.Where \nWhere \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#While","title":"Builder.While","content":"Builder.While \nWhile \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#Yield","title":"Builder.Yield","content":"Builder.Yield \nYield \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#Zero","title":"Builder.Zero","content":"Builder.Zero \nZero \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertylinqsupport.html","title":"PropertyLinqSupport","content":"PropertyLinqSupport \n \nPropertyLinqSupport.where \nwhere \nPropertyLinqSupport.select \nselect \nPropertyLinqSupport.bind2 \nbind2 \nPropertyLinqSupport.selectUnit \nselectUnit \nPropertyLinqSupport.bind2Unit \nbind2Unit"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertylinqsupport.html#where","title":"PropertyLinqSupport.where","content":"PropertyLinqSupport.where \nwhere \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertylinqsupport.html#select","title":"PropertyLinqSupport.select","content":"PropertyLinqSupport.select \nselect \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertylinqsupport.html#bind2","title":"PropertyLinqSupport.bind2","content":"PropertyLinqSupport.bind2 \nbind2 \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertylinqsupport.html#selectUnit","title":"PropertyLinqSupport.selectUnit","content":"PropertyLinqSupport.selectUnit \nselectUnit \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-propertylinqsupport.html#bind2Unit","title":"PropertyLinqSupport.bind2Unit","content":"PropertyLinqSupport.bind2Unit \nbind2Unit \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random.html","title":"Random","content":"Random \n \nRandom.Builder \nBuilder \nRandom.run \nrun \nRandom.delay \ndelay \nRandom.tryFinally \ntryFinally \nRandom.tryWith \ntryWith \nRandom.constant \nconstant \nRandom.map \nmap \nRandom.bind \nbind \nRandom.replicate \nreplicate \nRandom.sized \nsized \nRandom.resize \nresize \nRandom.integral \nintegral \nRandom.double \ndouble"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random.html#run","title":"Random.run","content":"Random.run \nrun \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random.html#delay","title":"Random.delay","content":"Random.delay \ndelay \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random.html#tryFinally","title":"Random.tryFinally","content":"Random.tryFinally \ntryFinally \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random.html#tryWith","title":"Random.tryWith","content":"Random.tryWith \ntryWith \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random.html#constant","title":"Random.constant","content":"Random.constant \nconstant \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random.html#map","title":"Random.map","content":"Random.map \nmap \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random.html#bind","title":"Random.bind","content":"Random.bind \nbind \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random.html#replicate","title":"Random.replicate","content":"Random.replicate \nreplicate \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random.html#sized","title":"Random.sized","content":"Random.sized \nsized \n\n Used to construct generators that depend on the size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random.html#resize","title":"Random.resize","content":"Random.resize \nresize \n\n Overrides the size parameter. Returns a generator which uses the\n given size instead of the runtime-size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random.html#integral","title":"Random.integral","content":"Random.integral \nintegral \n\n Generates a random integral number in the given inclusive range.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random.html#double","title":"Random.double","content":"Random.double \ndouble \n\n Generates a random floating point number in the given inclusive range.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random-builder.html","title":"Builder","content":"Builder \n \nBuilder.Bind \nBind \nBuilder.Return \nReturn \nBuilder.ReturnFrom \nReturnFrom"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random-builder.html#Bind","title":"Builder.Bind","content":"Builder.Bind \nBind \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random-builder.html#Return","title":"Builder.Return","content":"Builder.Return \nReturn \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random-builder.html#ReturnFrom","title":"Builder.ReturnFrom","content":"Builder.ReturnFrom \nReturnFrom \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-randombuilder.html","title":"RandomBuilder","content":"RandomBuilder \n \nRandomBuilder.random \nrandom"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-randombuilder.html#random","title":"RandomBuilder.random","content":"RandomBuilder.random \nrandom \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html","title":"Range","content":"Range \n \nRange.Internal \nInternal \nRange.map \nmap \nRange.origin \norigin \nRange.bounds \nbounds \nRange.lowerBound \nlowerBound \nRange.upperBound \nupperBound \nRange.singleton \nsingleton \nRange.constantFrom \nconstantFrom \nRange.constant \nconstant \nRange.constantBounded \nconstantBounded \nRange.__constantBoundedInt8 \n__constantBoundedInt8 \nRange.__constantBoundedInt16 \n__constantBoundedInt16 \nRange.__constantBoundedInt32 \n__constantBoundedInt32 \nRange.__constantBoundedInt64 \n__constantBoundedInt64 \nRange.__constantBoundedUInt8 \n__constantBoundedUInt8 \nRange.__constantBoundedUInt16 \n__constantBoundedUInt16 \nRange.__constantBoundedUInt32 \n__constantBoundedUInt32 \nRange.__constantBoundedUInt64 \n__constantBoundedUInt64 \nRange.__constantBoundedFloat \n__constantBoundedFloat \nRange.__constantBoundedDouble \n__constantBoundedDouble \nRange.__constantBoundedDecimal \n__constantBoundedDecimal \nRange.linearFrom \nlinearFrom \nRange.__linearFromInt8 \n__linearFromInt8 \nRange.__linearFromInt16 \n__linearFromInt16 \nRange.__linearFromInt32 \n__linearFromInt32 \nRange.__linearFromInt64 \n__linearFromInt64 \nRange.__linearFromUInt8 \n__linearFromUInt8 \nRange.__linearFromUInt16 \n__linearFromUInt16 \nRange.__linearFromUInt32 \n__linearFromUInt32 \nRange.__linearFromUInt64 \n__linearFromUInt64 \nRange.__linearFromFloat \n__linearFromFloat \nRange.__linearFromDouble \n__linearFromDouble \nRange.__linearFromDecimal \n__linearFromDecimal \nRange.linear \nlinear \nRange.__linearInt8 \n__linearInt8 \nRange.__linearInt16 \n__linearInt16 \nRange.__linearInt32 \n__linearInt32 \nRange.__linearInt64 \n__linearInt64 \nRange.__linearUInt8 \n__linearUInt8 \nRange.__linearUInt16 \n__linearUInt16 \nRange.__linearUInt32 \n__linearUInt32 \nRange.__linearUInt64 \n__linearUInt64 \nRange.__linearFloat \n__linearFloat \nRange.__linearDouble \n__linearDouble \nRange.__linearDecimal \n__linearDecimal \nRange.linearBounded \nlinearBounded \nRange.__linearBoundedInt8 \n__linearBoundedInt8 \nRange.__linearBoundedInt16 \n__linearBoundedInt16 \nRange.__linearBoundedInt32 \n__linearBoundedInt32 \nRange.__linearBoundedInt64 \n__linearBoundedInt64 \nRange.__linearBoundedUInt8 \n__linearBoundedUInt8 \nRange.__linearBoundedUInt16 \n__linearBoundedUInt16 \nRange.__linearBoundedUInt32 \n__linearBoundedUInt32 \nRange.__linearBoundedUInt64 \n__linearBoundedUInt64 \nRange.__linearBoundedFloat \n__linearBoundedFloat \nRange.__linearBoundedDouble \n__linearBoundedDouble \nRange.__linearBoundedDecimal \n__linearBoundedDecimal \nRange.exponentialFrom \nexponentialFrom \nRange.__exponentialFromInt8 \n__exponentialFromInt8 \nRange.__exponentialFromInt16 \n__exponentialFromInt16 \nRange.__exponentialFromInt32 \n__exponentialFromInt32 \nRange.__exponentialFromInt64 \n__exponentialFromInt64 \nRange.__exponentialFromUInt8 \n__exponentialFromUInt8 \nRange.__exponentialFromUInt16 \n__exponentialFromUInt16 \nRange.__exponentialFromUInt32 \n__exponentialFromUInt32 \nRange.__exponentialFromUInt64 \n__exponentialFromUInt64 \nRange.__exponentialFromFloat \n__exponentialFromFloat \nRange.__exponentialFromDouble \n__exponentialFromDouble \nRange.__exponentialFromDecimal \n__exponentialFromDecimal \nRange.exponential \nexponential \nRange.__exponentialInt8 \n__exponentialInt8 \nRange.__exponentialInt16 \n__exponentialInt16 \nRange.__exponentialInt32 \n__exponentialInt32 \nRange.__exponentialInt64 \n__exponentialInt64 \nRange.__exponentialUInt8 \n__exponentialUInt8 \nRange.__exponentialUInt16 \n__exponentialUInt16 \nRange.__exponentialUInt32 \n__exponentialUInt32 \nRange.__exponentialUInt64 \n__exponentialUInt64 \nRange.__exponentialFloat \n__exponentialFloat \nRange.__exponentialDouble \n__exponentialDouble \nRange.__exponentialDecimal \n__exponentialDecimal \nRange.exponentialBounded \nexponentialBounded \nRange.__exponentialBoundedInt8 \n__exponentialBoundedInt8 \nRange.__exponentialBoundedInt16 \n__exponentialBoundedInt16 \nRange.__exponentialBoundedInt32 \n__exponentialBoundedInt32 \nRange.__exponentialBoundedInt64 \n__exponentialBoundedInt64 \nRange.__exponentialBoundedUInt8 \n__exponentialBoundedUInt8 \nRange.__exponentialBoundedUInt16 \n__exponentialBoundedUInt16 \nRange.__exponentialBoundedUInt32 \n__exponentialBoundedUInt32 \nRange.__exponentialBoundedUInt64 \n__exponentialBoundedUInt64 \nRange.__exponentialBoundedFloat \n__exponentialBoundedFloat \nRange.__exponentialBoundedDouble \n__exponentialBoundedDouble \nRange.__exponentialBoundedDecimal \n__exponentialBoundedDecimal"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#map","title":"Range.map","content":"Range.map \nmap \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#origin","title":"Range.origin","content":"Range.origin \norigin \n\n Get the origin of a range. This might be the mid-point or the lower\n bound, depending on what the range represents.\n\n The \u0027bounds\u0027 of a range are scaled around this value when using the\n \u0027linear\u0027 family of combinators.\n\n When using a \u0027Range\u0027 to generate numbers, the shrinking function will\n shrink towards the origin.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#bounds","title":"Range.bounds","content":"Range.bounds \nbounds \n\n Get the extents of a range, for a given size.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#lowerBound","title":"Range.lowerBound","content":"Range.lowerBound \nlowerBound \n\n Get the lower bound of a range for the given size.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#upperBound","title":"Range.upperBound","content":"Range.upperBound \nupperBound \n\n Get the upper bound of a range for the given size.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#singleton","title":"Range.singleton","content":"Range.singleton \nsingleton \n\n Construct a range which represents a constant single value.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#constantFrom","title":"Range.constantFrom","content":"Range.constantFrom \nconstantFrom \n\n Construct a range which is unaffected by the size parameter with a\n origin point which may differ from the bounds.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#constant","title":"Range.constant","content":"Range.constant \nconstant \n\n Construct a range which is unaffected by the size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#constantBounded","title":"Range.constantBounded","content":"Range.constantBounded \nconstantBounded \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__constantBoundedInt8","title":"Range.__constantBoundedInt8","content":"Range.__constantBoundedInt8 \n__constantBoundedInt8 \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__constantBoundedInt16","title":"Range.__constantBoundedInt16","content":"Range.__constantBoundedInt16 \n__constantBoundedInt16 \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__constantBoundedInt32","title":"Range.__constantBoundedInt32","content":"Range.__constantBoundedInt32 \n__constantBoundedInt32 \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__constantBoundedInt64","title":"Range.__constantBoundedInt64","content":"Range.__constantBoundedInt64 \n__constantBoundedInt64 \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__constantBoundedUInt8","title":"Range.__constantBoundedUInt8","content":"Range.__constantBoundedUInt8 \n__constantBoundedUInt8 \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__constantBoundedUInt16","title":"Range.__constantBoundedUInt16","content":"Range.__constantBoundedUInt16 \n__constantBoundedUInt16 \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__constantBoundedUInt32","title":"Range.__constantBoundedUInt32","content":"Range.__constantBoundedUInt32 \n__constantBoundedUInt32 \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__constantBoundedUInt64","title":"Range.__constantBoundedUInt64","content":"Range.__constantBoundedUInt64 \n__constantBoundedUInt64 \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__constantBoundedFloat","title":"Range.__constantBoundedFloat","content":"Range.__constantBoundedFloat \n__constantBoundedFloat \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__constantBoundedDouble","title":"Range.__constantBoundedDouble","content":"Range.__constantBoundedDouble \n__constantBoundedDouble \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__constantBoundedDecimal","title":"Range.__constantBoundedDecimal","content":"Range.__constantBoundedDecimal \n__constantBoundedDecimal \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#linearFrom","title":"Range.linearFrom","content":"Range.linearFrom \nlinearFrom \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearFromInt8","title":"Range.__linearFromInt8","content":"Range.__linearFromInt8 \n__linearFromInt8 \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearFromInt16","title":"Range.__linearFromInt16","content":"Range.__linearFromInt16 \n__linearFromInt16 \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearFromInt32","title":"Range.__linearFromInt32","content":"Range.__linearFromInt32 \n__linearFromInt32 \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearFromInt64","title":"Range.__linearFromInt64","content":"Range.__linearFromInt64 \n__linearFromInt64 \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearFromUInt8","title":"Range.__linearFromUInt8","content":"Range.__linearFromUInt8 \n__linearFromUInt8 \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearFromUInt16","title":"Range.__linearFromUInt16","content":"Range.__linearFromUInt16 \n__linearFromUInt16 \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearFromUInt32","title":"Range.__linearFromUInt32","content":"Range.__linearFromUInt32 \n__linearFromUInt32 \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearFromUInt64","title":"Range.__linearFromUInt64","content":"Range.__linearFromUInt64 \n__linearFromUInt64 \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearFromFloat","title":"Range.__linearFromFloat","content":"Range.__linearFromFloat \n__linearFromFloat \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearFromDouble","title":"Range.__linearFromDouble","content":"Range.__linearFromDouble \n__linearFromDouble \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearFromDecimal","title":"Range.__linearFromDecimal","content":"Range.__linearFromDecimal \n__linearFromDecimal \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#linear","title":"Range.linear","content":"Range.linear \nlinear \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearInt8","title":"Range.__linearInt8","content":"Range.__linearInt8 \n__linearInt8 \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearInt16","title":"Range.__linearInt16","content":"Range.__linearInt16 \n__linearInt16 \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearInt32","title":"Range.__linearInt32","content":"Range.__linearInt32 \n__linearInt32 \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearInt64","title":"Range.__linearInt64","content":"Range.__linearInt64 \n__linearInt64 \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearUInt8","title":"Range.__linearUInt8","content":"Range.__linearUInt8 \n__linearUInt8 \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearUInt16","title":"Range.__linearUInt16","content":"Range.__linearUInt16 \n__linearUInt16 \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearUInt32","title":"Range.__linearUInt32","content":"Range.__linearUInt32 \n__linearUInt32 \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearUInt64","title":"Range.__linearUInt64","content":"Range.__linearUInt64 \n__linearUInt64 \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearFloat","title":"Range.__linearFloat","content":"Range.__linearFloat \n__linearFloat \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearDouble","title":"Range.__linearDouble","content":"Range.__linearDouble \n__linearDouble \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearDecimal","title":"Range.__linearDecimal","content":"Range.__linearDecimal \n__linearDecimal \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#linearBounded","title":"Range.linearBounded","content":"Range.linearBounded \nlinearBounded \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearBoundedInt8","title":"Range.__linearBoundedInt8","content":"Range.__linearBoundedInt8 \n__linearBoundedInt8 \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearBoundedInt16","title":"Range.__linearBoundedInt16","content":"Range.__linearBoundedInt16 \n__linearBoundedInt16 \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearBoundedInt32","title":"Range.__linearBoundedInt32","content":"Range.__linearBoundedInt32 \n__linearBoundedInt32 \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearBoundedInt64","title":"Range.__linearBoundedInt64","content":"Range.__linearBoundedInt64 \n__linearBoundedInt64 \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearBoundedUInt8","title":"Range.__linearBoundedUInt8","content":"Range.__linearBoundedUInt8 \n__linearBoundedUInt8 \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearBoundedUInt16","title":"Range.__linearBoundedUInt16","content":"Range.__linearBoundedUInt16 \n__linearBoundedUInt16 \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearBoundedUInt32","title":"Range.__linearBoundedUInt32","content":"Range.__linearBoundedUInt32 \n__linearBoundedUInt32 \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearBoundedUInt64","title":"Range.__linearBoundedUInt64","content":"Range.__linearBoundedUInt64 \n__linearBoundedUInt64 \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearBoundedFloat","title":"Range.__linearBoundedFloat","content":"Range.__linearBoundedFloat \n__linearBoundedFloat \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearBoundedDouble","title":"Range.__linearBoundedDouble","content":"Range.__linearBoundedDouble \n__linearBoundedDouble \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__linearBoundedDecimal","title":"Range.__linearBoundedDecimal","content":"Range.__linearBoundedDecimal \n__linearBoundedDecimal \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#exponentialFrom","title":"Range.exponentialFrom","content":"Range.exponentialFrom \nexponentialFrom \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialFromInt8","title":"Range.__exponentialFromInt8","content":"Range.__exponentialFromInt8 \n__exponentialFromInt8 \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialFromInt16","title":"Range.__exponentialFromInt16","content":"Range.__exponentialFromInt16 \n__exponentialFromInt16 \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialFromInt32","title":"Range.__exponentialFromInt32","content":"Range.__exponentialFromInt32 \n__exponentialFromInt32 \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialFromInt64","title":"Range.__exponentialFromInt64","content":"Range.__exponentialFromInt64 \n__exponentialFromInt64 \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialFromUInt8","title":"Range.__exponentialFromUInt8","content":"Range.__exponentialFromUInt8 \n__exponentialFromUInt8 \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialFromUInt16","title":"Range.__exponentialFromUInt16","content":"Range.__exponentialFromUInt16 \n__exponentialFromUInt16 \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialFromUInt32","title":"Range.__exponentialFromUInt32","content":"Range.__exponentialFromUInt32 \n__exponentialFromUInt32 \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialFromUInt64","title":"Range.__exponentialFromUInt64","content":"Range.__exponentialFromUInt64 \n__exponentialFromUInt64 \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialFromFloat","title":"Range.__exponentialFromFloat","content":"Range.__exponentialFromFloat \n__exponentialFromFloat \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialFromDouble","title":"Range.__exponentialFromDouble","content":"Range.__exponentialFromDouble \n__exponentialFromDouble \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialFromDecimal","title":"Range.__exponentialFromDecimal","content":"Range.__exponentialFromDecimal \n__exponentialFromDecimal \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#exponential","title":"Range.exponential","content":"Range.exponential \nexponential \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialInt8","title":"Range.__exponentialInt8","content":"Range.__exponentialInt8 \n__exponentialInt8 \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialInt16","title":"Range.__exponentialInt16","content":"Range.__exponentialInt16 \n__exponentialInt16 \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialInt32","title":"Range.__exponentialInt32","content":"Range.__exponentialInt32 \n__exponentialInt32 \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialInt64","title":"Range.__exponentialInt64","content":"Range.__exponentialInt64 \n__exponentialInt64 \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialUInt8","title":"Range.__exponentialUInt8","content":"Range.__exponentialUInt8 \n__exponentialUInt8 \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialUInt16","title":"Range.__exponentialUInt16","content":"Range.__exponentialUInt16 \n__exponentialUInt16 \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialUInt32","title":"Range.__exponentialUInt32","content":"Range.__exponentialUInt32 \n__exponentialUInt32 \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialUInt64","title":"Range.__exponentialUInt64","content":"Range.__exponentialUInt64 \n__exponentialUInt64 \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialFloat","title":"Range.__exponentialFloat","content":"Range.__exponentialFloat \n__exponentialFloat \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialDouble","title":"Range.__exponentialDouble","content":"Range.__exponentialDouble \n__exponentialDouble \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialDecimal","title":"Range.__exponentialDecimal","content":"Range.__exponentialDecimal \n__exponentialDecimal \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#exponentialBounded","title":"Range.exponentialBounded","content":"Range.exponentialBounded \nexponentialBounded \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialBoundedInt8","title":"Range.__exponentialBoundedInt8","content":"Range.__exponentialBoundedInt8 \n__exponentialBoundedInt8 \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialBoundedInt16","title":"Range.__exponentialBoundedInt16","content":"Range.__exponentialBoundedInt16 \n__exponentialBoundedInt16 \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialBoundedInt32","title":"Range.__exponentialBoundedInt32","content":"Range.__exponentialBoundedInt32 \n__exponentialBoundedInt32 \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialBoundedInt64","title":"Range.__exponentialBoundedInt64","content":"Range.__exponentialBoundedInt64 \n__exponentialBoundedInt64 \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialBoundedUInt8","title":"Range.__exponentialBoundedUInt8","content":"Range.__exponentialBoundedUInt8 \n__exponentialBoundedUInt8 \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialBoundedUInt16","title":"Range.__exponentialBoundedUInt16","content":"Range.__exponentialBoundedUInt16 \n__exponentialBoundedUInt16 \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialBoundedUInt32","title":"Range.__exponentialBoundedUInt32","content":"Range.__exponentialBoundedUInt32 \n__exponentialBoundedUInt32 \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialBoundedUInt64","title":"Range.__exponentialBoundedUInt64","content":"Range.__exponentialBoundedUInt64 \n__exponentialBoundedUInt64 \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialBoundedFloat","title":"Range.__exponentialBoundedFloat","content":"Range.__exponentialBoundedFloat \n__exponentialBoundedFloat \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialBoundedDouble","title":"Range.__exponentialBoundedDouble","content":"Range.__exponentialBoundedDouble \n__exponentialBoundedDouble \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range.html#__exponentialBoundedDecimal","title":"Range.__exponentialBoundedDecimal","content":"Range.__exponentialBoundedDecimal \n__exponentialBoundedDecimal \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range-internal.html","title":"Internal","content":"Internal \n \nInternal.clamp \nclamp \nInternal.scaleLinear \nscaleLinear \nInternal.scaleExponential \nscaleExponential"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range-internal.html#clamp","title":"Internal.clamp","content":"Internal.clamp \nclamp \n\n Truncate a value so it stays within some range.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range-internal.html#scaleLinear","title":"Internal.scaleLinear","content":"Internal.scaleLinear \nscaleLinear \n\n Scale an integral linearly with the size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range-internal.html#scaleExponential","title":"Internal.scaleExponential","content":"Internal.scaleExponential \nscaleExponential \n\n Scale an integral exponentially with the size parameter.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-rangelinqsupport.html","title":"RangeLinqSupport","content":"RangeLinqSupport \n \nRangeLinqSupport.select \nselect"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-rangelinqsupport.html#select","title":"RangeLinqSupport.select","content":"RangeLinqSupport.select \nselect \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-reportmodule.html","title":"Report","content":"Report \n \nReport.render \nrender \nReport.tryRaise \ntryRaise"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-reportmodule.html#render","title":"Report.render","content":"Report.render \nrender \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-reportmodule.html#tryRaise","title":"Report.tryRaise","content":"Report.tryRaise \ntryRaise \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-resultmodule.html","title":"Result","content":"Result \n \nResult.map \nmap \nResult.filter \nfilter \nResult.isFailure \nisFailure"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-resultmodule.html#map","title":"Result.map","content":"Result.map \nmap \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-resultmodule.html#filter","title":"Result.filter","content":"Result.filter \nfilter \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-resultmodule.html#isFailure","title":"Result.isFailure","content":"Result.isFailure \nisFailure \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-seedmodule.html","title":"Seed","content":"Seed \n \nSeed.ofInt32 \nofInt32 \nSeed.from \nfrom \nSeed.random \nrandom \nSeed.range \nrange \nSeed.next \nnext \nSeed.nextBigInt \nnextBigInt \nSeed.nextDouble \nnextDouble \nSeed.split \nsplit"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-seedmodule.html#ofInt32","title":"Seed.ofInt32","content":"Seed.ofInt32 \nofInt32 \n\n Create a new \u0027Seed\u0027 from a 32-bit integer.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-seedmodule.html#from","title":"Seed.from","content":"Seed.from \nfrom \n\n Create a new \u0027Seed\u0027.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-seedmodule.html#random","title":"Seed.random","content":"Seed.random \nrandom \n\n Create a new random \u0027Seed\u0027.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-seedmodule.html#range","title":"Seed.range","content":"Seed.range \nrange \n\n The possible range of values returned from \u0027next\u0027.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-seedmodule.html#next","title":"Seed.next","content":"Seed.next \nnext \n\n Returns the next pseudo-random number in the sequence, and a new seed.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-seedmodule.html#nextBigInt","title":"Seed.nextBigInt","content":"Seed.nextBigInt \nnextBigInt \n\n Generates a random bigint in the specified range.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-seedmodule.html#nextDouble","title":"Seed.nextDouble","content":"Seed.nextDouble \nnextDouble \n\n Generates a random double in the specified range.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-seedmodule.html#split","title":"Seed.split","content":"Seed.split \nsplit \n\n Splits a random number generator in to two.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-seq.html","title":"Seq","content":"Seq \n \nSeq.cons \ncons \nSeq.consNub \nconsNub"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-seq.html#cons","title":"Seq.cons","content":"Seq.cons \ncons \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-seq.html#consNub","title":"Seq.consNub","content":"Seq.consNub \nconsNub \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-shrink.html","title":"Shrink","content":"Shrink \n \nShrink.removes \nremoves \nShrink.halves \nhalves \nShrink.list \nlist \nShrink.elems \nelems \nShrink.sequence \nsequence \nShrink.sequenceList \nsequenceList \nShrink.sequenceElems \nsequenceElems \nShrink.towards \ntowards \nShrink.towardsDouble \ntowardsDouble"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-shrink.html#removes","title":"Shrink.removes","content":"Shrink.removes \nremoves \n\n Produce all permutations of removing \u0027k\u0027 elements from a list.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-shrink.html#halves","title":"Shrink.halves","content":"Shrink.halves \nhalves \n\n Produce a list containing the progressive halving of an integral.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-shrink.html#list","title":"Shrink.list","content":"Shrink.list \nlist \n\n Shrink a list by edging towards the empty list.\n Note we always try the empty list first, as that is the optimal shrink.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-shrink.html#elems","title":"Shrink.elems","content":"Shrink.elems \nelems \n\n Shrink each of the elements in input list using the supplied shrinking\n function.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-shrink.html#sequence","title":"Shrink.sequence","content":"Shrink.sequence \nsequence \n\n Turn a list of trees in to a tree of lists, using the supplied function to\n merge shrinking options.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-shrink.html#sequenceList","title":"Shrink.sequenceList","content":"Shrink.sequenceList \nsequenceList \n\n Turn a list of trees in to a tree of lists, opting to shrink both the list\n itself and the elements in the list during traversal.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-shrink.html#sequenceElems","title":"Shrink.sequenceElems","content":"Shrink.sequenceElems \nsequenceElems \n\n Turn a list of trees in to a tree of lists, opting to shrink only the\n elements of the list (i.e. the size of the list will always be the same).\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-shrink.html#towards","title":"Shrink.towards","content":"Shrink.towards \ntowards \n\n Shrink an integral number by edging towards a destination.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-shrink.html#towardsDouble","title":"Shrink.towardsDouble","content":"Shrink.towardsDouble \ntowardsDouble \n\n Shrink a floating-point number by edging towards a destination.\n Note we always try the destination first, as that is the optimal shrink.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree.html","title":"Tree","content":"Tree \n \nTree.outcome \noutcome \nTree.shrinks \nshrinks \nTree.singleton \nsingleton \nTree.map \nmap \nTree.bind \nbind \nTree.join \njoin \nTree.duplicate \nduplicate \nTree.fold \nfold \nTree.foldForest \nfoldForest \nTree.unfold \nunfold \nTree.unfoldForest \nunfoldForest \nTree.expand \nexpand \nTree.filter \nfilter \nTree.filterForest \nfilterForest \nTree.renderList \nrenderList \nTree.render \nrender"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree.html#outcome","title":"Tree.outcome","content":"Tree.outcome \noutcome \n\n The generated outcome.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree.html#shrinks","title":"Tree.shrinks","content":"Tree.shrinks \nshrinks \n\n All the possible shrinks of this outcome. This should be ordered\n smallest to largest as if property still fails with the first shrink in\n the list then we will commit to that path and none of the others will\n be tried (i.e. there is no backtracking).\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree.html#singleton","title":"Tree.singleton","content":"Tree.singleton \nsingleton \n\n Create a tree with a single outcome and no shrinks.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree.html#map","title":"Tree.map","content":"Tree.map \nmap \n\n Map over a tree.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree.html#bind","title":"Tree.bind","content":"Tree.bind \nbind \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree.html#join","title":"Tree.join","content":"Tree.join \njoin \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree.html#duplicate","title":"Tree.duplicate","content":"Tree.duplicate \nduplicate \n\n Turns a tree, in to a tree of trees. Useful for testing Hedgehog itself as\n it allows you to observe the shrinks for a value inside a property,\n while still allowing the property to shrink to a minimal\n counterexample.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree.html#fold","title":"Tree.fold","content":"Tree.fold \nfold \n\n Fold over a tree.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree.html#foldForest","title":"Tree.foldForest","content":"Tree.foldForest \nfoldForest \n\n Fold over a list of trees.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree.html#unfold","title":"Tree.unfold","content":"Tree.unfold \nunfold \n\n Build a tree from an unfolding function and a seed value.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree.html#unfoldForest","title":"Tree.unfoldForest","content":"Tree.unfoldForest \nunfoldForest \n\n Build a list of trees from an unfolding function and a seed value.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree.html#expand","title":"Tree.expand","content":"Tree.expand \nexpand \n\n Apply an additional unfolding function to an existing tree.\n\n The root outcome remains intact, only the shrinks are affected, this\n applies recursively, so shrinks can only ever be added using this\n function.\n\n If you want to replace the shrinks altogether, try:\n\n Tree.unfold f (outcome oldTree)\n\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree.html#filter","title":"Tree.filter","content":"Tree.filter \nfilter \n\n Recursively discard any shrinks whose outcome does not pass the predicate.\n Note that the root outcome can never be discarded.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree.html#filterForest","title":"Tree.filterForest","content":"Tree.filterForest \nfilterForest \n\n Recursively discard any trees whose outcome does not pass the predicate.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree.html#renderList","title":"Tree.renderList","content":"Tree.renderList \nrenderList \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree.html#render","title":"Tree.render","content":"Tree.render \nrender \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-failedexception.html","title":"FailedException","content":"FailedException \n \nFailedException.( .ctor ) \n( .ctor ) \nFailedException.Tests \nTests \nFailedException.Shrinks \nShrinks \nFailedException.Journal \nJournal \nFailedException.Discards \nDiscards"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-failedexception.html#( .ctor )","title":"FailedException.( .ctor )","content":"FailedException.( .ctor ) \n( .ctor ) \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-failedexception.html#Tests","title":"FailedException.Tests","content":"FailedException.Tests \nTests \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-failedexception.html#Shrinks","title":"FailedException.Shrinks","content":"FailedException.Shrinks \nShrinks \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-failedexception.html#Journal","title":"FailedException.Journal","content":"FailedException.Journal \nJournal \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-failedexception.html#Discards","title":"FailedException.Discards","content":"FailedException.Discards \nDiscards \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-failurereport.html","title":"FailureReport","content":"FailureReport \n \nFailureReport.Size \nSize \nFailureReport.Seed \nSeed \nFailureReport.Shrinks \nShrinks \nFailureReport.Journal \nJournal \nFailureReport.RenderRecheck \nRenderRecheck"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-failurereport.html#Size","title":"FailureReport.Size","content":"FailureReport.Size \nSize \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-failurereport.html#Seed","title":"FailureReport.Seed","content":"FailureReport.Seed \nSeed \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-failurereport.html#Shrinks","title":"FailureReport.Shrinks","content":"FailureReport.Shrinks \nShrinks \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-failurereport.html#Journal","title":"FailureReport.Journal","content":"FailureReport.Journal \nJournal \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-failurereport.html#RenderRecheck","title":"FailureReport.RenderRecheck","content":"FailureReport.RenderRecheck \nRenderRecheck \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-frombigint.html","title":"FromBigInt","content":"FromBigInt \n \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.Invoke \nInvoke"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-frombigint.html#Invoke","title":"FromBigInt.Invoke","content":"FromBigInt.Invoke \nInvoke \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gaveupexception.html","title":"GaveUpException","content":"GaveUpException \n \nGaveUpException.( .ctor ) \n( .ctor ) \nGaveUpException.Tests \nTests"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gaveupexception.html#( .ctor )","title":"GaveUpException.( .ctor )","content":"GaveUpException.( .ctor ) \n( .ctor ) \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gaveupexception.html#Tests","title":"GaveUpException.Tests","content":"GaveUpException.Tests \nTests \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen-1.html","title":"Gen\u003C\u0027a\u003E","content":"Gen\u003C\u0027a\u003E \n\n A generator for values and shrink trees of type \u0027a.\n \nGen\u003C\u0027a\u003E.Gen \nGen"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-gen-1.html#Gen","title":"Gen\u003C\u0027a\u003E.Gen","content":"Gen\u003C\u0027a\u003E.Gen \nGen \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-hedgehogexception.html","title":"HedgehogException","content":"HedgehogException \n \nHedgehogException.( .ctor ) \n( .ctor )"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-hedgehogexception.html#( .ctor )","title":"HedgehogException.( .ctor )","content":"HedgehogException.( .ctor ) \n( .ctor ) \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-journal.html","title":"Journal","content":"Journal \n \nJournal.Journal \nJournal"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-journal.html#Journal","title":"Journal.Journal","content":"Journal.Journal \nJournal \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html","title":"MaxValue","content":"MaxValue \n \nMaxValue.Invoke \nInvoke \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#Invoke","title":"MaxValue.Invoke","content":"MaxValue.Invoke \nInvoke \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html","title":"MinValue","content":"MinValue \n \nMinValue.Invoke \nInvoke \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#Invoke","title":"MinValue.Invoke","content":"MinValue.Invoke \nInvoke \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property-1.html","title":"Property\u003C\u0027a\u003E","content":"Property\u003C\u0027a\u003E \n \nProperty\u003C\u0027a\u003E.Property \nProperty"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-property-1.html#Property","title":"Property\u003C\u0027a\u003E.Property","content":"Property\u003C\u0027a\u003E.Property \nProperty \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random-1.html","title":"Random\u003C\u0027a\u003E","content":"Random\u003C\u0027a\u003E \n\n A generator for random values of type \u0027a\n \nRandom\u003C\u0027a\u003E.Random \nRandom"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-random-1.html#Random","title":"Random\u003C\u0027a\u003E.Random","content":"Random\u003C\u0027a\u003E.Random \nRandom \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range-1.html","title":"Range\u003C\u0027a\u003E","content":"Range\u003C\u0027a\u003E \n\n A range describes the bounds of a number to generate, which may or may not\n be dependent on a \u0027Size\u0027.\n\n The constructor takes an origin between the lower and upper bound, and a\n function from \u0027Size\u0027 to bounds.  As the size goes towards 0, the values\n go towards the origin.\n \nRange\u003C\u0027a\u003E.Range \nRange"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-range-1.html#Range","title":"Range\u003C\u0027a\u003E.Range","content":"Range\u003C\u0027a\u003E.Range \nRange \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-report.html","title":"Report","content":"Report \n \nReport.Tests \nTests \nReport.Discards \nDiscards \nReport.Status \nStatus"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-report.html#Tests","title":"Report.Tests","content":"Report.Tests \nTests \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-report.html#Discards","title":"Report.Discards","content":"Report.Discards \nDiscards \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-report.html#Status","title":"Report.Status","content":"Report.Status \nStatus \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-result-1.html","title":"Result\u003C\u0027a\u003E","content":"Result\u003C\u0027a\u003E \n \nResult\u003C\u0027a\u003E.Failure \nFailure \nResult\u003C\u0027a\u003E.Discard \nDiscard \nResult\u003C\u0027a\u003E.Success \nSuccess"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-result-1.html#Failure","title":"Result\u003C\u0027a\u003E.Failure","content":"Result\u003C\u0027a\u003E.Failure \nFailure \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-result-1.html#Discard","title":"Result\u003C\u0027a\u003E.Discard","content":"Result\u003C\u0027a\u003E.Discard \nDiscard \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-result-1.html#Success","title":"Result\u003C\u0027a\u003E.Success","content":"Result\u003C\u0027a\u003E.Success \nSuccess \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-seed.html","title":"Seed","content":"Seed \n\n Splittable random number generator.\n \nSeed.Value \nValue \nSeed.Gamma \nGamma"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-seed.html#Value","title":"Seed.Value","content":"Seed.Value \nValue \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-seed.html#Gamma","title":"Seed.Gamma","content":"Seed.Gamma \nGamma \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-size.html","title":"Size","content":"Size \n\n Tests are parameterized by the \u0060Size\u0060 of the randomly-generated data,\n the meaning of which depends on the particular generator used.\n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-status.html","title":"Status","content":"Status \n \nStatus.Failed \nFailed \nStatus.GaveUp \nGaveUp \nStatus.OK \nOK"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-status.html#Failed","title":"Status.Failed","content":"Status.Failed \nFailed \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-status.html#GaveUp","title":"Status.GaveUp","content":"Status.GaveUp \nGaveUp \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-status.html#OK","title":"Status.OK","content":"Status.OK \nOK \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tobigint.html","title":"ToBigInt","content":"ToBigInt \n \nToBigInt.Invoke \nInvoke \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tobigint.html#Invoke","title":"ToBigInt.Invoke","content":"ToBigInt.Invoke \nInvoke \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree-1.html","title":"Tree\u003C\u0027a\u003E","content":"Tree\u003C\u0027a\u003E \n\n A rose tree which represents a random generated outcome, and all the ways\n in which it can be made smaller.\n \nTree\u003C\u0027a\u003E.Node \nNode"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tree-1.html#Node","title":"Tree\u003C\u0027a\u003E.Node","content":"Tree\u003C\u0027a\u003E.Node \nNode \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-discards.html","title":"discards","content":"discards \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-shrinks.html","title":"shrinks","content":"shrinks \n"},{"uri":"https://hedgehogqa.github.io/fsharp-hedgehog/reference/hedgehog-tests.html","title":"tests","content":"tests \n"}]